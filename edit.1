.TH edit 1 "25 February 2024"
.SH NAME
\fBedit\fP - Terminal-based text editor
.SH SYNOPSIS
edit [--exec <command>] [--conf-file <file>] [--log-file <file>]
     [--log-level <number>] [--help] [filename1..filenameN]

.SH DESCRIPTION
\fBedit\fP is a simple text editor for the terminal.

It can handle multiple files (buffers) at the same time, and comes
with a bunch of useful commands.

.SH OPTIONS
.TP
.B --exec <command>
Executes <command> for every file given as a parameter.

.TP
.B --conf-file <file>
Specify a config file

.TP
.B --log-file <file>
Specify a log file

.TP
.B --log-level <number>
Set the log level. ERROR (1), WARN (2), INFO (3), INPUT (4)

.TP
.B --
Breaks the argument parsing. Treats the rest of the arguments as filenames.

.SH EXAMPLES
Open files for editing: \fBedit my-file.txt another-file.c\fP

Strip trailing spaces from files: \fBedit --exec "strip buffer" *.txt

.SH KEYBINDINGS

.TP
.B Ctrl + E
Execute a command

.TP
.B Ctrl + F
Format line

.TP
.B Ctrl + K
Cut line

.TP
.B Ctrl + N
Add buffer

.TP
.B Ctrl + O
Open file

.TP
.B Ctrl + Q
Kill buffer

.TP
.B Ctrl + S
Save buffer

.TP
.B Ctrl + Left Arrow
Move to the buffer on the left

.TP
.B Ctrl + Right Arrow
Move to the buffer on the right

.TP
.B F5
Reload file

.TP
.B Alt + H
Display a help buffer

.TP
.B Alt + C
Toggle comment in the current line

.TP
.B Alt + S
Search in the buffer

.TP
.B Alt + R
Replace command

.TP
.B Alt + K
Cut the line from the cursor to the end.

.TP
.B Alt + Up Arrow
Moves the current line up.

.TP
.B Alt + Down Arrow
Moves the current line down.

.TP
.B Alt + [1-9]
Go to buffer number [1-9]

.TP
.B Alt + Left Arrow
Jumps to the previous word

.TP
.B Alt + Righ Arrow
Jumps to the next word

.TP
.B Alt + Backspace
Deletes a word backwards

.TP
.B Alt + Supr Key
Deletes a word forward

.TP
.B Ctrl + [hjkl] | Arrows
Move cursor

.TP
.B Ctrl + Z
Undo

.TP
.B Ctrl + R
Redo

.SH COMMANDS

.TP
.B !quit
Exit the editor

.TP
.B pwd
prints the current working directory

.TP
.B wq
Write the buffer and close it

.TP
.B fwq
Same as wq, but it formats the buffer first

.TP
.B strip [line|buffer]
Strips triling whitespaces.

.TP
.B goto [line|buffer] <line-number>
Jumps to a certain line/buffer

.TP
.B format [line|buffer]
Formats the line/buffer. Same as Ctrl + F.

.TP
.B search <string>
Jumps to the next occurence of the given string of text

.TP
.B search-backwards
same as search, but backwards.

.TP
.B replace <text> <replacement>
Replaces all instances of <text> with <replacement>

.TP
.B set <key> [<value>]
Sets a configuration parameter for all new buffers

.TP
.B setlocal <key> [<value>]
Sets a configuration parameter for the current buffer

.TP
.B log
Open a new buffer with the log of the session.

.TP
.B help
Display the help buffer

.SH SET
.TP
.B linenumber
Display line numbers
.TP
.B nolinenumber
Don't display line numbers
.TP
.B tabwidth <int>
Set tab width
.TP
.B highlighting
Enable syntax highlighting
.TP
.B nohighlighting
Disable syntax highlighting

.SH CONFIGURATION
To configure the behaviour of the editor, you can define a config file.

The file uses the json format. Here's a table with the options.

.TS
allbox tab(|);
cb cb cb
c c c.
Name | Json Type | Default Value
tab_size | Number | 8
substitute_tab_with_space | Bool | false
syntax_highlighting | Bool | false
auto_save_interval | Number | 60
line_number | Bool | false
eol | String | "\\n"
history.enabled | Bool | true
history.max_size | Number | 1000 (0 means unlimited)
.TE

If not specified, with the --config-file argument, the program looks for it in the following places.

\fI

$XDG_CONFIG_HOME/edit/config.json

$HOME/.config/edit/config.json

\fP


.SH AUTHOR
Sa√∫l Valdelvira

.SH SEE ALSO
Browse the source code at \fIhttp://git.saulv.es/edit\fP
